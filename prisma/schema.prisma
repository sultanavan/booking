generator client {
  provider = "prisma-client-js"
  seed     = "node seed.js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  email       String    @unique
  password    String
  name        String
  phoneNumber String
  pictureUrl  String
  reviews     Review[]  @relation("UserReviews")
  bookings    Booking[] @relation("UserBookings")
}

model Review {
  id         String   @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String

  user     User     @relation("UserReviews", fields: [userId], references: [id], onDelete: Cascade)
  property Property @relation("PropertyReviews", fields: [propertyId], references: [id], onDelete: Cascade)
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String

  user     User     @relation("UserBookings", fields: [userId], references: [id], onDelete: Cascade)
  property Property @relation("PropertyBookings", fields: [propertyId], references: [id], onDelete: Cascade)
}

model Property {
  id            String     @id @default(uuid())
  hostId        String
  title         String
  description   String
  location      String
  pricePerNight Float
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int

  host       Host             @relation("HostProperties", fields: [hostId], references: [id], onDelete: Cascade)
  reviews    Review[]         @relation("PropertyReviews")
  bookings   Booking[]        @relation("PropertyBookings")
  amenities  PropertyAmenity[]
}

model Host {
  id          String     @id @default(uuid())
  username    String     @unique
  password    String
  name        String
  email       String     @unique
  phoneNumber String
  pictureUrl  String
  aboutMe     String

  listings Property[] @relation("HostProperties")
}

model Amenity {
  id        String            @id
  name      String            @unique
  properties PropertyAmenity[]
}

model PropertyAmenity {
  propertyId String
  amenityId  String

  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  amenity  Amenity  @relation(fields: [amenityId], references: [id], onDelete: Cascade)

  @@id([propertyId, amenityId]) // composite PK
}
